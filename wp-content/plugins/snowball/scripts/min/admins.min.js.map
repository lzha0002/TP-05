{"version":3,"sources":["choropleth/admin.js","bargraph/admin.js","columns/admin.js","contents/admin.js","googlemaps/admin.js","html/admin.js","image/admin.js","imageslider/admin.js","scatterplot/admin.js","soundcloud/admin.js","splash/admin.js","table/admin.js","text/admin.js","twitter/admin.js","vimeo/admin.js","vine/admin.js","youtube/admin.js"],"names":["$","loadData","block","json","container","find","get","mapType","val","data","JSON","parse","initTable","url","snowball","pluginsUrl","getJSON","reloadData","colHeaders","hot","updateSettings","render","Handsontable","rowHeaders","fixedRowsTop","columns","readOnly","columnSorting","manualColumnMove","manualColumnResize","contextMenu","multiSelect","persistantState","fillHandle","observeChanges","search","undo","stretchH","afterChange","changes","source","this","getData","refreshOnChange","trigger","afterLoadData","afterInit","generatedJSON","jsonString","stringify","exportSVG","iframe","svg","contents","html","b64","btoa","unescape","encodeURIComponent","attr","href-lang","href","on","quantize","text","map","draw","contentWindow","drawMap","closest","jQuery","type","spacing","Math","floor","drawBargraph","initializeEditorAt","textarea","editor","CodeMirror","fromTextArea","mode","lineNumbers","lineWrapping","indentUnit","tabSize","theme","setSize","save","addNewColumn","selection","eq","addClass","each","index","removeClass","show","hide","checkbox","prop","activateSelectedButton","activateSelectedEditor","activeEditors","length","event","selectedIndex","stopPropagation","confirm","codeMirrorInstance","button","toTextArea","temp_textarea","temp_codeMirrorInstance","temp_checkbox","updateContents","buildContents","title","match","matches","elem","id","push","forEach","content","document","ready","hasClass","mapParse","re","exec","zoom","maptype","size","mToZ","lat","lon","m","c","z","parseInt","round","log","LN2","debounce","props","borderradius","file_frame","wp_media_post_id","wp","media","model","settings","post","set_to_post_id","uploader","param","open","frames","frame","multiple","attachment","insertingFrom","state","attributes","first","toJSON","blockIndex","urlIndex","drawScatterplot","getTrackId","indexOf","getSoundCloudUrl","options","soundCloudUrl","key","hasOwnProperty","soundCloudLink","show_user","show_comments","visual","soundcloud_options","trackId","trackUrl","counter","quicktags","buttons","QTags","_buttonsInit","darkenInput","bgDarkenVal","createTable","HTML","numRows","i","j","e","afterCreateRow","afterCreateCol","afterRemoveRow","afterRemoveCol","addButton","parseTweetUrl","tweetUrl","trim","tweetID","createTweet","parseVideoURL","videoUrl","videoID","inputColor","outputColor","substring"],"mappings":"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","file":"admins.min.js","sourcesContent":["(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var quantize = block.find(\"[data-target='quantize']\").val();\n\n    $(this).find(\".quantize-output\").text(quantize);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".map\");\n    var draw = iframe[0].contentWindow.drawMap;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-choropleth\"));\n    }\n  });\n\n  $(\"#snowball-main\").on(\"change\", \".snowball-block-choropleth [data-target='map-type']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var mapType = $(this).val();\n\n    reloadData(block, mapType);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-choropleth [data-target='quantize']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var hot = block.data(\"hot\");\n    var quantize = $(this).val();\n\n    block.find(\".quantize-output\").text(quantize);\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data, mapType); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data, mapType);\n      });\n    }\n  }\n\n  function reloadData(block, mapType) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var colHeaders;\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n      colHeaders = [\"fips\", \"Country\", \"Value\"];\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data, mapType) {\n    var colHeaders = [\"fips\", \"Country\", \"Value\"];\n\n    if (mapType === \"usa\") {\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    }\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: [{data: \"fips\", readOnly: true}, {data: \"State\", readOnly: true}, {data: \"Value\"}],\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n\n    block.find(\"[data-target='json-\" + mapType + \"']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".map\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var spacing = Math.floor($(this).find(\".spacing\").val()*100) + \"%\";\n    $(this).find(\".spacing-output\").text(spacing);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-bargraph .spacing\", function() {\n    var block = $(this).closest(\".snowball-block-bargraph\");\n    var spacing = Math.floor($(this).val()*100) + \"%\";\n\n    block.find(\".spacing-output\").text(spacing);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawBargraph;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-bargraph\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data);\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"label\", \"value\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"Values\"];\n    var columns = [{data: \"label\", type: \"text\"}, {data: \"value\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".chart\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function ($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-columns\", function() {\n    var block = $(this);\n\n    block.find('input[type=\"checkbox\"]').each(function(index) {\n      if ($(this).prop(\"checked\")) {\n        var textarea = block.find(\".column-textarea\").eq(index);\n        initializeEditorAt(textarea);\n        block.find(\".toggle-button\").eq(index).addClass(\"show\");\n      }\n    });\n\n    block.find(\".CodeMirror\").hide().eq(0).show();\n    block.find(\".toggle-button\").eq(0).addClass(\"active\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 4) {\n      block.find(\".add-button\").hide();\n    }\n\n    if(activeEditors == 1) {\n      block.find(\".show .delete-column\").hide();\n    }\n  });\n\n  function initializeEditorAt(textarea) {\n    var editor = CodeMirror.fromTextArea(textarea[0], {\n      mode: \"htmlmixed\",\n      lineNumbers: true,\n      lineWrapping: true,\n      indentUnit: 2,\n      tabSize: 2,\n      theme: \"monokai\"\n    });\n\n    editor.setSize(\"100%\", \"100%\");\n\n    editor.on(\"change\", function() {\n      editor.save();\n      textarea.trigger(\"change\");\n    });\n\n    textarea.data(\"codeMirrorInstance\", editor);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .toggle-button\", function(event) {\n    var block = $(this).closest(\".snowball-block-columns\");\n    var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index($(this));\n\n    activateSelectedButton(block, selectedIndex);\n    activateSelectedEditor(block, selectedIndex);\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .add-button\", function(event) {\n    var block= $(this).closest(\".snowball-block-columns\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 1) {\n        block.find(\".toggle-button\").eq(0).find(\"span\").show();\n    }\n\n    if (activeEditors == 3) {\n      block.find(\".add-button\").hide();\n    }\n\n    block.find( '[type=\"checkbox\"]' ).each(function(index) {\n      if (!($(this).prop(\"checked\"))) {\n        addNewColumn(block, index);\n        return false;\n      }\n    });\n    block.trigger(\"render\");\n  });\n\n  function addNewColumn(block, selection) {\n    block.find(\".toggle-button\").eq(selection).addClass(\"show\");\n\n    var textarea = block.find(\".column-textarea\").eq(selection);\n    initializeEditorAt(textarea);\n\n    block.find(\".toggle-buttons .toggle-button\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n\n    block.find(\".snowball-tinker .CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n\n    var checkbox = block.find('[type=\"checkbox\"]').eq(selection);\n    checkbox.prop(\"checked\", true);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .delete-column\", function(event) {\n    event.stopPropagation();\n\n    if (confirm(\"Are you sure you want to delete this column?\")) {\n      var block = $(this).closest(\".snowball-block-columns\");\n      var button = $(this).closest(\".toggle-button\");\n      var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index(button);\n      var activeEditors = block.find(\".show\").length;\n      var textarea;\n      var codeMirrorInstance;\n      var checkbox;\n\n      if (activeEditors == 2) {\n        block.find(\".toggle-button\").eq(0).find(\"span\").hide();\n      }\n\n      if (selectedIndex == (activeEditors - 1)) {\n        textarea = block.find(\".column-textarea\").eq(selectedIndex);\n        codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n        checkbox = block.find( '[type=\"checkbox\"]' ).eq(selectedIndex);\n        checkbox.prop(\"checked\", false);\n\n        codeMirrorInstance.toTextArea();\n        textarea.val(\"\");\n\n        block.find(\".show\").eq(selectedIndex).removeClass(\"show\");\n\n        block.find(\".CodeMirror\").eq((selectedIndex - 1)).show();\n      } else {\n        while (selectedIndex < (activeEditors - 1)) {\n          textarea = block.find(\".column-textarea\").eq(selectedIndex);\n          codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n          codeMirrorInstance.toTextArea();\n\n          checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex));\n          checkbox.prop(\"checked\", true);\n\n          var temp_textarea = block.find(\".column-textarea\").eq((selectedIndex + 1));\n          var temp_codeMirrorInstance = temp_textarea.data(\"codeMirrorInstance\");\n\n          temp_codeMirrorInstance.toTextArea();\n\n          var temp_checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex + 1));\n          temp_checkbox.prop(\"checked\", false);\n\n          textarea.val((temp_textarea.val()));\n          initializeEditorAt(textarea);\n\n          if (selectedIndex == (activeEditors - 2)) {\n            block.find(\".show\").eq((selectedIndex + 1)).removeClass(\"show\");\n            activeEditors = block.find(\".show\").length;\n\n            block.find(\".column-textarea\").eq((selectedIndex + 1)).val(\"\");\n          }\n\n          selectedIndex = selectedIndex + 1;\n        }\n      }\n\n      block.trigger(\"render\");\n      activateSelectedButton(block, (selectedIndex - 1));\n      activateSelectedEditor(block, (selectedIndex - 1));\n    }\n\n    $(this).closest(\".snowball-block-columns\").find(\".add-button\").show();\n  });\n\n  function activateSelectedButton(block, selection) {\n    block.find(\".show\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n  }\n\n  function activateSelectedEditor(block, selection) {\n    block.find(\".snowball-tinker .CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n  }\n})(jQuery);","(function($) {\n\n  $(document).ready(function() {\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block\", function() {\n\n    if ($(this).hasClass(\"snowball-block-contents\")) {\n      return;\n    }\n\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-contents\", function() {\n    updateContents($(this));\n  });\n\n  function updateContents(block) {\n    var html = buildContents();\n\n    if (typeof block == \"undefined\") {\n      $(\".snowball-block-contents\").each(function() {\n        var block = $(this);\n        $(this).find(\".html\").val(html);\n        block.trigger(\"render\");\n      });\n    } else {\n      block.find(\".html\").val(html);\n      block.trigger(\"render\");\n    }\n  }\n\n  function buildContents() {\n    var contents = [];\n    var html = \"<ul>\";\n\n    $(\".snowball-block\").each(function() {\n      var title = $(this).find(\".snowball-title\").text();\n      var match = \"[id]\";\n      var matches = $(this).find(\".snowball-preview\").contents().find(match);\n\n      if (title !== \"Contents\") {\n        matches.each(function() {\n          var elem = {\n            id: $(this).attr(\"id\"),\n            text: $(this).text()\n          };\n\n          contents.push(elem);\n        });\n      }\n    });\n\n    contents.forEach(function(elem, index) {\n      var content = \"<li><a href='#\" + elem.id + \"'>\" + elem.text + \"</a></li>\";\n      html = html + content; \n    });\n\n    html = html + \"</ul>\";\n\n    return html;\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-googlemaps\", function() {\n    var zoom = $(this).find(\".zoom\").val();\n    $(this).find(\".zoom-output\").text(zoom);\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-googlemaps .map-user\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var url = $(this).val();\n    var props = mapParse(url);\n\n    var lat = props && props.lat ? props.lat : '39.9581888';\n    var lon = props && props.lon ? props.lon : '-75.1887621';\n    var zoom = props && props.zoom ? props.zoom : '14';\n    var maptype = props && props.maptype ? props.maptype : 'roadmap';\n\n    block.find(\"[data-target='lat']\").val(lat);\n    block.find(\"[data-target='lon']\").val(lon);\n    block.find(\"[data-target='zoom']\").val(zoom);\n    block.find(\".zoom-output\").text(zoom);\n    block.find(\"[data-target='maptype'][value='\" + maptype +  \"']\").prop(\"checked\", true);\n\n    block.trigger(\"render\");\n  }, 250));\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-googlemaps .zoom\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var zoom = $(this).val();\n\n    block.find(\".zoom-output\").text(zoom);\n  }, 50));\n\n  function mapParse(url) {\n    var re = /google.[a-z.]+\\/maps\\/.*@(-?\\d+.\\d+),(-?\\d+.\\d+),(\\d+)([mz])/;\n    var matches = re.exec(url);\n\n    if (matches !== null) {\n      var zoom = matches[3];\n      var maptype = matches[4];\n      var size = \"600x400\";\n\n      if (maptype === \"m\") {\n        maptype = \"satellite\";\n        zoom = mToZ(zoom);\n      } else {\n        maptype = \"roadmap\";\n      }\n\n      return {\n        \"lat\": matches[1],\n        \"lon\": matches[2],\n        \"maptype\": maptype,\n        \"zoom\": zoom,\n        \"size\": size\n      };\n    }\n  }\n\n  function mToZ(m) {\n    var c = 56819712;\n    var z = c / parseInt(m, 10);\n\n    z = Math.round(1 + (Math.log(z) / Math.LN2));\n\n    return z;\n  }\n\n})(jQuery);\n","(function($) {\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-html\", function() {\n\n      var block = $(this);\n      var textarea = block.find(\"textarea\");\n\n      var editor = CodeMirror.fromTextArea(textarea[0], {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        lineWrapping: true,\n        indentUnit: 2,\n        tabSize: 2,\n        theme: \"monokai\"\n      });\n\n      editor.setSize(\"100%\", \"100%\");\n\n      editor.on(\"change\", function() {\n        editor.save();\n        textarea.trigger(\"change\");\n      });\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-image\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-image .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(index);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-imageslider\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var blockIndex;\n    var urlIndex;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-imageslider .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      blockIndex = $(\".snowball-block\").index(block);\n      urlIndex = block.find(\".upload-image-button\").index($(this));\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(blockIndex);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").eq(urlIndex).val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var size = $(this).find(\".size\").val() + \"px\";\n    $(this).find(\".size-output\").text(size);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-scatterplot .size\", function() {\n    var block = $(this).closest(\".snowball-block-scatterplot\");\n    var size = $(this).val() + \"px\";\n\n    block.find(\".size-output\").text(size);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawScatterplot;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-scatterplot\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/scatterplot/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n    var columns = [{data: \"Label\", type: \"text\"}, {data: \"X\", type: \"numeric\"}, {data: \"Y\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".chart\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function($) {\n  function getTrackId(url) {\n    var re;\n\n    if (url && url.indexOf(\"api.soundcloud.com/tracks\") >= 0) {\n      re = /api.soundcloud.com\\/tracks\\/(\\d+&)/;\n      var matches = re.exec(url);\n      if (matches[1]) {\n        return matches[1];\n      }\n    }\n\n    return \"\";\n  }\n\n  function getSoundCloudUrl(id, options) {\n    var soundCloudUrl = \"https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/\";\n    soundCloudUrl = soundCloudUrl + id + \"&show_reposts=false&auto_play=false\";\n\n    for (var key in options) {\n      if (options.hasOwnProperty(key)) {\n        soundCloudUrl = soundCloudUrl + \"&\" + key + \"=\" + options[key];\n      }\n    }\n    return soundCloudUrl;\n  }\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n    $(block).find(\".track-url\").val(trackUrl);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-soundcloud\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n\n    $(block).find(\".track-url\").val(trackUrl);\n    block.trigger(\"render\");\n  }, 250));\n})(jQuery);\n","(function($) {\n\n  var counter = 0;\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-splash\", function() {\n    var textarea = $(this).find(\"textarea\");\n    var id = \"snowball-block-splash-textarea-\" + counter;\n    textarea.attr(\"id\", id);\n    counter++;\n\n    quicktags({\n      id : id,\n      buttons: \"strong,em,link,blockquote,del,code,close\"\n    });\n\n    QTags._buttonsInit();\n\n    var darkenInput = $(this).find('.darken-bg');\n    var bgDarkenVal = Math.floor((darkenInput.val() * 100) / darkenInput.attr('max')) + \"%\";\n    $(this).find('.darken-bg-output').text(bgDarkenVal);\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .quicktags-toolbar .button\", function() {\n    $(this).closest(\".snowball-block\").trigger(\"render\");\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(index);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-splash .darken-bg\", function() {\n      var block = $(this).closest(\".snowball-block-splash\");\n      var bgDarkenVal = Math.floor(($(this).val() * 100) / $(this).attr('max')) + \"%\";\n\n      block.find(\".darken-bg-output\").text(bgDarkenVal);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-table\", function() {\n    var block = $(this);\n    var container = block.find(\".table\").get(0);\n    var data = JSON.parse(block.find(\"[data-target='JSON']\").val());\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 1,\n      colHeaders: true,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterInit: function(e) {\n        refreshOnChange(block, data);\n        block.trigger(\"render\");\n      },\n      afterChange: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterCreateRow: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterCreateCol: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterRemoveRow: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterRemoveCol: function (e) {\n        refreshOnChange(block, data);\n      }\n    });\n\n    block.data(\"hot\", hot);\n  });\n\n  function refreshOnChange(block, data) {\n    var jsonString = JSON.stringify(data);\n\n    block.find(\"[data-target='JSON']\").val(jsonString);\n    block.find(\"[data-target='HTML']\").val(createTable(data));\n\n    block.find(\".handsontableInput\").trigger(\"change\");\n  }\n\n  function createTable(JSON) {\n    var HTML = \"  <table>\\n\";\n    var numRows = JSON.length;\n\n    for (var i = 0; i < numRows; i++) {\n      if (i === 0) {\n        HTML = HTML + \"    <thead>\\n\";\n      } else if (i === 1) {\n        HTML = HTML + \"    </thead>\\n    <tbody>\\n\";\n      }\n      HTML = HTML + \"      <tr>\\n\";\n      for (var j = 0; j < JSON[i].length; j++) {\n        if (JSON[i][j] === null) {\n          JSON[i][j] = \"\";\n        }\n\n        if (i === 0) {\n          HTML = HTML + \"        <th>\" + JSON[i][j] + \"</th>\\n\";\n        } else {\n          HTML = HTML + \"        <td>\" + JSON[i][j] + \"</td>\\n\";\n        }\n      }\n\n      HTML = HTML + \"      </tr>\\n\";\n    }\n\n    HTML = HTML + \"    </tbody>\\n  </table>\";\n\n    return HTML;\n  }\n\n})(jQuery);","(function($) {\n    var counter = 0;\n    QTags.addButton(\"eg_hr\", \"hr\", \"<hr />\", \"\", \"h\", \"Horizontal rule line\", 70);\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-text\", function() {\n      var textarea = $(this).find(\"textarea\");\n      var id = \"snowball-block-text-textarea-\" + counter;\n      textarea.attr(\"id\", id);\n      counter++;\n\n      quicktags({\n        id : id,\n        buttons: \"strong,em,link,blockquote,del,code,ul,ol,li,code,close\"\n      });\n\n      QTags._buttonsInit();\n    });\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-text .quicktags-toolbar .button\", function() {\n      $(this).closest(\".snowball-block\").trigger(\"render\");\n    });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-twitter\", function() {\n    var tweetUrl = $(this).find(\"[data-target='tweet-url']\").val().trim();\n    var tweetID = parseTweetUrl(tweetUrl);\n\n    $(this).find(\"[data-target='id']\").val(tweetID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-twitter [data-target='tweet-url']\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-twitter\");\n    var tweetUrl = $(this).val().trim();\n    var tweetID = parseTweetUrl(tweetUrl);\n\n    block.find(\"[data-target='id']\").val(tweetID);\n  }, 250));\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-twitter\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var createTweet = iframe[0].contentWindow.createTweet;\n\n    if (createTweet) {\n      createTweet(iframe.contents().find(\".snowball-block-twitter\"));\n    }\n  });\n\n  function parseTweetUrl(url) {\n    var re = /^https?:\\/\\/twitter.com\\/(\\w+)\\/status(es)?\\/(\\d+)$/;\n    var matches = re.exec(url);\n\n    if (matches && matches[3]) {\n      return matches[3];\n    } else {\n      return \"\";\n    }\n  }\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vimeo\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo [data-target='control-color-input']\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var inputColor = $(this).val();\n    var outputColor = \"&color=\" + inputColor.substring(1);\n    $(\"[data-target='control-color-output']\").val(outputColor);\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"video\") >= 0) {\n      re = /vimeo.com.*video\\/(\\S*)\"/;\n    } else {\n      re = /vimeo.com\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"65982111\";\n\n    return match;\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vine\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vine .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-vine\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /vine.co\\/v\\/(.*)\\/embed/;\n    } else {\n      re = /vine.co\\/v\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"bjHh0zHdgZT\";\n\n    return match;\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-youtube\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-youtube .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-youtube\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /youtube.com.*embed\\/(\\S*)\"/;\n    } else {\n      re = /youtube.com.*v=(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"124847087\";\n\n    return match;\n  }\n})(jQuery);\n"]}